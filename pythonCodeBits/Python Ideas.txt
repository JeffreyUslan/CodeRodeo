Python code ideas

Original concept for this list from BH: As we're all learning this together I'm thinking we should start compiling demo task lists. These would be fun tasks that people can program at their own pace and when enough people have done a task we can spend a rodeo looking through them all. Below is a list of ideas referenced with name/initials from whoever thought about the idea and the date of the idea.

-- Ideas --

BH 2014-01-07: Tell me how much energy my front porch lights use. Data is in a Google Doc that I can make public (https://docs.google.com/spreadsheet/ccc?key=0AqnFTxnV2tCGdGEtZnNteTZrYmxmcHc3RU05YWhTanc&usp=sharing). There are three 75W bulbs on the porch -- I know, I know, I need to change them out to CFL or LED, but for some reason this ENERGY STAR home had 95% incandescents installed in it (using them up while they still could?). This would be an intermediate task that could introduce libraries, API calls, psuedo-SQL, talking between programs (e.g., Stata and Python), and possibly a number of other techniques. I already see a few ways to solve this one.

BH 2014-01-07: A related beginning task would be web scraping. Weather or financial info would be logical tasks here. For instance, my kids' college fund is through a 529 plan that has indices not available through normal channels (Google or Yahoo finance, SigFig, etc.), but it's available on a buried page on the website. I currently solve this by using a Google Spreadsheet to query a webpage (a slick brute force approach), but Python could handle this as well and provide better logging capabilities to a text file. Response from BL: For weather, we could try collecting data from Weather Underground. I know they are a source that some use. We could test things against the NOAA websites but I’m wary of screwing up and hammering their servers again. 

BH 2014-01-07: Speaking of which, setting up logging queries through crontab would be another good task. Does Windows have a similar function? I've never had a reason to look for it. Response from BL: Windows has a scheduling function. We used it in the old DHP days for a while. It’s not too hard to use. I’d have to read up on it again. Basically, I think we used it to run “.bat” files. 

BH 2014-01-23: Python can do tasks in the desktop environment as well, as I understand it. Currently I have a .bat file that I run whenever I start my computer up; the .bat file opens up all the programs I usually use (chrome, outlook, timer, etc.) and runs the global.bat script from IT that you all already have automatically run but that I have to run manually because I'm remote. Making these into python scripts would be another good way to learn about its capabilities.

BH 2014-01-23: cdx.bat could also be made as a python script and we could code it in such a way that it'll work on linux and windows (maybe?).

BH 2014-01-24: xkcd gave me some inspiration this morning (http://xkcd.com/1321/). Download historical weather data from a bunch of sites, and then create a script that will analyze the data and produce historical weather graphs based on an input city. Long term goal: use the python script, a simple backend database, and some webtools (js graphing libraries like www.chartjs.org) to make this a dynamic page from our website. I'm thinking it'd be cool to have a "fun" section of our website where we link to a bunch of online tools, but the fun page would be hidden from our main website, at least for now. We would use the fun webpage to show clients some of our new capabilities. Back to my xkcd idea, graphs would show yearly values, as in the comic example. Number of days below 0 (or 10 or 32), days above X, days of precipitation, inches of precipitation, and anything else global warming, climate change, etc. related.

BL 2014-01-24:  Duct static pressure calculator. Henry was talking to me yesterday about wanting to write it in VBA to add to his spreadsheet but a Python version would be cooler. There are some examples of calculators on the web such as: http://www.freecalc.com/ductloss.htm

NK  2014-02-04:  A rewrite of the Quickbooks Pro Timer program would be useful.  The exported files are text-based, tab-delimited, so it shouldn't be too hard to have it spit out the same format as the original program.  With appropriate graphical libraries, a much nicer interface could be developed, with a calendar and such.  Might also be a good way to practice with mysql databases.
